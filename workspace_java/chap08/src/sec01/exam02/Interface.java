package sec01.exam02;

public interface Interface {

	// 자바에서 인터페이스는 객체의 사용 방법을 정의한 타입
	// 개발 코드와 객체가 서로 통신하는 접점 역할을 한다
	// 개발 코드가 인터페이스의 메소드를 호출하면 인터페이스는 객체의 메소드를 호출한다
	// 그래서 개발 코드는 객체 내부 구조를 알 필요가 없고 인터페이스의 메소드만 알고 있으면 된다.

	// 인터페이스는 상수필드와 추상 메소드만을 구성 멤버로 가진다.
	
	// 상수 필드
	// 인터페이스에 선언된 필드는 상수로 자동으로 설정되고
	// 상수필드로 선언하는 public static final이 생략가능 하다.
	// 인터페이스 상수는 선언과 동시에 초기값을 지정해야 한다.
	// 상수이름은 전부 대문자로 작성하되, 서로 다른 단어로 구성되어 있을 경우에는 언더바로 연결한다
	
	// 추상 메소드
	// 인터페이스를 통해 호출된 메소드는 결국 객체에서 실행되기 때문에, 인터페이스도 추상메소드로 선언한다.
	// 선언된 메소드는 abstract이 생략된다.
	
	// 인터페이스 구현
	// 인터페이스는 객체의 메소드를 호출하는데 객체는 인터페이스에서 정의된 추상 메소드와 동일한 메소드,매개,리턴을 가진
	// 실체 메소드를 가지고 있어야 한다. 이러한 객체를 구현(implement)객체라고 한고 구현객체를 생성하는 클래스를 구현클래스라고 한다.
	// 보통의 클래스와 동일하지만, 인터페이스 타입으로 사용할수 있을을 알려주기 위해 클래스 선언부에 implement 키워드를 추가하고 인터페이스 이름을 적는다
	
	// List는 인터페이스고, ArrayList는 클래스이다.
	
	// 인터페이스도 상속이 가능하다.
	// 인터페이스는 다중 상속이 허용된다.
	
}
