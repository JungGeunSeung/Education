<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 디스패처서블렛 컨텍스트: 이 서블렛의 요청 처리 인프라를 정의합니다 -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 스프링 MVC @Controller 프로그래밍 모델을 활성화합니다 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- ${webappRoot}/resources 디렉토리의 정적 리소스를 효율적으로 서빙하여 /resources/**에 대한 HTTP GET 요청을 처리합니다 -->
	
	<!-- 
		mapping : url 패턴 / location : webapp폴더 하위의 실제위치
	 	/resources/ : webapp 안에 있는 resources를 뜻한다.
		context path 바로 다음에 맵핑주소가 붙으면 서블릿을 찾지 않고 webapp을 찾는다.
		( 이렇게 하는 이유는 서블릿을 찾을때 소요되는 시간을 단축하기 위해서 )
		/resources/** : **두개가 붙으면 뒤에 어떤 주소가 붙어도 포함하는 URL 패턴이다.
	-->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- @Controllers가 /WEB-INF/views 디렉토리에서 .jsp 리소스로 렌더링하기 위해 선택한 보기를 해결합니다 -->
	<!-- 
		스프링이 주도권을 가지고 호출(new) 할 수 있는 bean
		스프링한테 등록시켜 놓고 원할때에 호출 할 수 있다.
		등록하지 않으면 스프링은 사용 할 수 없다.
		InternalResourceViewResolver - 중요한 클래스중 하나
		homecontroller에서 보면 home라는 메소드는 리턴을 "home"으로 문자열을 리턴하는데,
		여기에서 beans:property로 앞에(prefix)와 뒤(suffix)에 글자를 적어주어 이동하는데 편하게 해준다.
	 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 
		component : 클래스보단 큰단위인데 클래스라고 생각해라
		패키지 안에있는 어노텐션을 스캔하라 라는 뜻이다.
	 -->
	<context:component-scan base-package="kr.or.human" />
	
	
	
</beans:beans>
