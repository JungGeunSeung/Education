package sec02.exam01;

public class Car {

	// 필드 (field)
	// 변수 선언이 가능한 곳이라고 생각.
	// 클래스 안에서 공통으로 사용 가능
	// 변수 선언과 동시에 초기화는 가능
	// 따로 변수에 값을 변경하는 건 불가능함
	String model = "임팔라";
	// model 변수 선언과 동시에 초기화
	
	
	// 초기화를 하지 않은 경우
	// 0, false, null로 자동으로 초기화 됨
	int speed;
	// 변수 선언만 한 것
	
	// speed 변수의 값을 60으로 바꾸는 행동(바꾸는걸 실행)
	// 필드 영역에선 실행이 되지 않는다 (또는 행동)
	// speed = 60;
	
	
	// 메소드
	/*
	 * [리턴타입] 메소드이름 ([매개변수선언],[매개변수선언2] ... ) {
	 * 
	 * 메소드 실행블럭
	 * 
	 * }
	 * */
	
	// 리턴타입 : 리턴값의 타입을 정해야 한다. 메소드를 실행한 후의 결과값을 말한다.
	//            리턴값이 있을 수도 있고, 없을 수도 있지만, 있을경우 선언부에 명시되어야 한다.
	// 변수를 다른타입으로 선언하게 되면 값을 저장할 수 없기때문에 컴파일 에러가 뜬다.
	// 예시 - 메소드이름(double x, double y) -> int 변수명 = 메소드이름(10,20); int에는 double값을 저장할수 없기때문에 오류난다.
	// void : 타입을 상관하지 않는다. 즉 돌려줄 타입이 없기때문에 그냥 실행된다라고 생각. 리턴하는 값이 없다
	
	
	// 메소드이름
	// 자바스크립트의 함수와 같다고 생각하면 된다. 즉 사용할 함수의 이름이라고 생각한다.
	// $와 _ 를 제외한 특수문자를 금지하고, 관례적으로 소문자만 사용한다 혹 다른단어가 혼합되는 경우 뒤에오는 단어의 앞글자를 대문자로 바꾼다
	// 메소드가 어떤 기능을 수행하는지 쉽게 알 수 있도록 기능이름으로 지어주는게 좋다.
	
	// 매개 변수 선언
	// 자바스크립트의 함수를 만들때 전달인자와 같다.
	// 매개 변수를 선언 할때는 반드시 타입을 정해줘야 한다(ex. int, double)
	
	// 매개변수의 개수를 모를 경우
	// 전달인자의 개수를 모를 경우 매개변수선언에 배열을 적어준다
	// 예시 : int sum1(int[] values) { }
	
	
	
	
	
	
}
